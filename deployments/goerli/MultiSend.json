{
  "address": "0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "transactions",
          "type": "bytes"
        }
      ],
      "name": "multiSend",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "args": [],
  "numDeployments": 4,
  "linkedData": {},
  "solcInputHash": "a128f2a31ecf0f1507d09c047cd019fe",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"transactions\",\"type\":\"bytes\"}],\"name\":\"multiSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nick Dodson - <nick.dodson@consensys.net>Gon\\u00e7alo S\\u00e1 - <goncalo.sa@consensys.net>Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{\"multiSend(bytes)\":{\"details\":\"Sends multiple transactions and reverts all if one fails.\",\"params\":{\"transactions\":\"Encoded transactions. Each transaction is encoded as a packed bytes of                     operation as a uint8 with 0 for a call or 1 for a delegatecall (=> 1 byte),                     to as a address (=> 20 bytes),                     value as a uint256 (=> 32 bytes),                     data length as a uint256 (=> 32 bytes),                     data as bytes.                     see abi.encodePacked for more information on packed encoding\"}}},\"title\":\"Multi Send - Allows to batch multiple transactions into one.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multiSend(bytes)\":{\"notice\":\"This method is payable as delegatecalls keep the msg.value from the previous call         If the calling method (e.g. execTransaction) received ETH this would revert otherwise\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol\":\"MultiSend\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol\":{\"keccak256\":\"0xe6bf0d0a7cd22246fe93dc7da134359d9d61cd2671e20384ec3c9e7677fadc55\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://379d2ac2581c22cc52b41c9062b01e2c660ad45f41cef908bd4b23b9f7f41b0a\",\"dweb:/ipfs/QmVVd5sPrHCzYCWdWWUMZujdKX7fEBX1nkHb9QejoDGMAP\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5030606081901b6080526102536100316000396000604301526102536000f3fe60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b610036610031366004610156565b610038565b005b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156100ce5760405162461bcd60e51b815260206004820152603060248201527f4d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642060448201526f1d9a584819195b1959d85d1958d85b1b60821b606482015260840160405180910390fd5b805160205b81811015610151578083015160f81c6001820184015160601c601583018501516035840186015160558501870160008560008114610118576001811461012857610133565b6000808585888a5af19150610133565b6000808585895af491505b508061013e57600080fd5b50508060550185019450505050506100d3565b505050565b60006020828403121561016857600080fd5b813567ffffffffffffffff8082111561018057600080fd5b818401915084601f83011261019457600080fd5b8135818111156101a6576101a6610207565b604051601f8201601f19908116603f011681019083821181831017156101ce576101ce610207565b816040528281528760208487010111156101e757600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d908ff87eaa63f3ad4fe27b39044964d01ee57da8ce7b9d525d237c5c55e225264736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b610036610031366004610156565b610038565b005b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156100ce5760405162461bcd60e51b815260206004820152603060248201527f4d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642060448201526f1d9a584819195b1959d85d1958d85b1b60821b606482015260840160405180910390fd5b805160205b81811015610151578083015160f81c6001820184015160601c601583018501516035840186015160558501870160008560008114610118576001811461012857610133565b6000808585888a5af19150610133565b6000808585895af491505b508061013e57600080fd5b50508060550185019450505050506100d3565b505050565b60006020828403121561016857600080fd5b813567ffffffffffffffff8082111561018057600080fd5b818401915084601f83011261019457600080fd5b8135818111156101a6576101a6610207565b604051601f8201601f19908116603f011681019083821181831017156101ce576101ce610207565b816040528281528760208487010111156101e757600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d908ff87eaa63f3ad4fe27b39044964d01ee57da8ce7b9d525d237c5c55e225264736f6c63430008070033",
  "history": [
    {
      "address": "0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "transactions",
              "type": "bytes"
            }
          ],
          "name": "multiSend",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        }
      ],
      "args": [],
      "numDeployments": 3,
      "linkedData": {},
      "solcInputHash": "a128f2a31ecf0f1507d09c047cd019fe",
      "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"transactions\",\"type\":\"bytes\"}],\"name\":\"multiSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nick Dodson - <nick.dodson@consensys.net>Gon\\u00e7alo S\\u00e1 - <goncalo.sa@consensys.net>Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{\"multiSend(bytes)\":{\"details\":\"Sends multiple transactions and reverts all if one fails.\",\"params\":{\"transactions\":\"Encoded transactions. Each transaction is encoded as a packed bytes of                     operation as a uint8 with 0 for a call or 1 for a delegatecall (=> 1 byte),                     to as a address (=> 20 bytes),                     value as a uint256 (=> 32 bytes),                     data length as a uint256 (=> 32 bytes),                     data as bytes.                     see abi.encodePacked for more information on packed encoding\"}}},\"title\":\"Multi Send - Allows to batch multiple transactions into one.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multiSend(bytes)\":{\"notice\":\"This method is payable as delegatecalls keep the msg.value from the previous call         If the calling method (e.g. execTransaction) received ETH this would revert otherwise\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol\":\"MultiSend\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol\":{\"keccak256\":\"0xe6bf0d0a7cd22246fe93dc7da134359d9d61cd2671e20384ec3c9e7677fadc55\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://379d2ac2581c22cc52b41c9062b01e2c660ad45f41cef908bd4b23b9f7f41b0a\",\"dweb:/ipfs/QmVVd5sPrHCzYCWdWWUMZujdKX7fEBX1nkHb9QejoDGMAP\"]}},\"version\":1}",
      "bytecode": "0x60a060405234801561001057600080fd5b5030606081901b6080526102536100316000396000604301526102536000f3fe60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b610036610031366004610156565b610038565b005b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156100ce5760405162461bcd60e51b815260206004820152603060248201527f4d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642060448201526f1d9a584819195b1959d85d1958d85b1b60821b606482015260840160405180910390fd5b805160205b81811015610151578083015160f81c6001820184015160601c601583018501516035840186015160558501870160008560008114610118576001811461012857610133565b6000808585888a5af19150610133565b6000808585895af491505b508061013e57600080fd5b50508060550185019450505050506100d3565b505050565b60006020828403121561016857600080fd5b813567ffffffffffffffff8082111561018057600080fd5b818401915084601f83011261019457600080fd5b8135818111156101a6576101a6610207565b604051601f8201601f19908116603f011681019083821181831017156101ce576101ce610207565b816040528281528760208487010111156101e757600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d908ff87eaa63f3ad4fe27b39044964d01ee57da8ce7b9d525d237c5c55e225264736f6c63430008070033",
      "deployedBytecode": "0x60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b610036610031366004610156565b610038565b005b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156100ce5760405162461bcd60e51b815260206004820152603060248201527f4d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642060448201526f1d9a584819195b1959d85d1958d85b1b60821b606482015260840160405180910390fd5b805160205b81811015610151578083015160f81c6001820184015160601c601583018501516035840186015160558501870160008560008114610118576001811461012857610133565b6000808585888a5af19150610133565b6000808585895af491505b508061013e57600080fd5b50508060550185019450505050506100d3565b505050565b60006020828403121561016857600080fd5b813567ffffffffffffffff8082111561018057600080fd5b818401915084601f83011261019457600080fd5b8135818111156101a6576101a6610207565b604051601f8201601f19908116603f011681019083821181831017156101ce576101ce610207565b816040528281528760208487010111156101e757600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d908ff87eaa63f3ad4fe27b39044964d01ee57da8ce7b9d525d237c5c55e225264736f6c63430008070033",
      "history": [
        {
          "address": "0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761",
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "transactions",
                  "type": "bytes"
                }
              ],
              "name": "multiSend",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "args": [],
          "numDeployments": 2,
          "linkedData": {},
          "solcInputHash": "a128f2a31ecf0f1507d09c047cd019fe",
          "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"transactions\",\"type\":\"bytes\"}],\"name\":\"multiSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nick Dodson - <nick.dodson@consensys.net>Gon\\u00e7alo S\\u00e1 - <goncalo.sa@consensys.net>Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{\"multiSend(bytes)\":{\"details\":\"Sends multiple transactions and reverts all if one fails.\",\"params\":{\"transactions\":\"Encoded transactions. Each transaction is encoded as a packed bytes of                     operation as a uint8 with 0 for a call or 1 for a delegatecall (=> 1 byte),                     to as a address (=> 20 bytes),                     value as a uint256 (=> 32 bytes),                     data length as a uint256 (=> 32 bytes),                     data as bytes.                     see abi.encodePacked for more information on packed encoding\"}}},\"title\":\"Multi Send - Allows to batch multiple transactions into one.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multiSend(bytes)\":{\"notice\":\"This method is payable as delegatecalls keep the msg.value from the previous call         If the calling method (e.g. execTransaction) received ETH this would revert otherwise\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol\":\"MultiSend\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol\":{\"keccak256\":\"0xe6bf0d0a7cd22246fe93dc7da134359d9d61cd2671e20384ec3c9e7677fadc55\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://379d2ac2581c22cc52b41c9062b01e2c660ad45f41cef908bd4b23b9f7f41b0a\",\"dweb:/ipfs/QmVVd5sPrHCzYCWdWWUMZujdKX7fEBX1nkHb9QejoDGMAP\"]}},\"version\":1}",
          "bytecode": "0x60a060405234801561001057600080fd5b5030606081901b6080526102536100316000396000604301526102536000f3fe60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b610036610031366004610156565b610038565b005b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156100ce5760405162461bcd60e51b815260206004820152603060248201527f4d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642060448201526f1d9a584819195b1959d85d1958d85b1b60821b606482015260840160405180910390fd5b805160205b81811015610151578083015160f81c6001820184015160601c601583018501516035840186015160558501870160008560008114610118576001811461012857610133565b6000808585888a5af19150610133565b6000808585895af491505b508061013e57600080fd5b50508060550185019450505050506100d3565b505050565b60006020828403121561016857600080fd5b813567ffffffffffffffff8082111561018057600080fd5b818401915084601f83011261019457600080fd5b8135818111156101a6576101a6610207565b604051601f8201601f19908116603f011681019083821181831017156101ce576101ce610207565b816040528281528760208487010111156101e757600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d908ff87eaa63f3ad4fe27b39044964d01ee57da8ce7b9d525d237c5c55e225264736f6c63430008070033",
          "deployedBytecode": "0x60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b610036610031366004610156565b610038565b005b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156100ce5760405162461bcd60e51b815260206004820152603060248201527f4d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642060448201526f1d9a584819195b1959d85d1958d85b1b60821b606482015260840160405180910390fd5b805160205b81811015610151578083015160f81c6001820184015160601c601583018501516035840186015160558501870160008560008114610118576001811461012857610133565b6000808585888a5af19150610133565b6000808585895af491505b508061013e57600080fd5b50508060550185019450505050506100d3565b505050565b60006020828403121561016857600080fd5b813567ffffffffffffffff8082111561018057600080fd5b818401915084601f83011261019457600080fd5b8135818111156101a6576101a6610207565b604051601f8201601f19908116603f011681019083821181831017156101ce576101ce610207565b816040528281528760208487010111156101e757600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d908ff87eaa63f3ad4fe27b39044964d01ee57da8ce7b9d525d237c5c55e225264736f6c63430008070033",
          "history": [
            {
              "address": "0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761",
              "abi": [
                {
                  "inputs": [],
                  "stateMutability": "nonpayable",
                  "type": "constructor"
                },
                {
                  "inputs": [
                    {
                      "internalType": "bytes",
                      "name": "transactions",
                      "type": "bytes"
                    }
                  ],
                  "name": "multiSend",
                  "outputs": [],
                  "stateMutability": "payable",
                  "type": "function"
                }
              ],
              "args": [],
              "numDeployments": 1,
              "linkedData": {},
              "solcInputHash": "a128f2a31ecf0f1507d09c047cd019fe",
              "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"transactions\",\"type\":\"bytes\"}],\"name\":\"multiSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nick Dodson - <nick.dodson@consensys.net>Gon\\u00e7alo S\\u00e1 - <goncalo.sa@consensys.net>Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{\"multiSend(bytes)\":{\"details\":\"Sends multiple transactions and reverts all if one fails.\",\"params\":{\"transactions\":\"Encoded transactions. Each transaction is encoded as a packed bytes of                     operation as a uint8 with 0 for a call or 1 for a delegatecall (=> 1 byte),                     to as a address (=> 20 bytes),                     value as a uint256 (=> 32 bytes),                     data length as a uint256 (=> 32 bytes),                     data as bytes.                     see abi.encodePacked for more information on packed encoding\"}}},\"title\":\"Multi Send - Allows to batch multiple transactions into one.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multiSend(bytes)\":{\"notice\":\"This method is payable as delegatecalls keep the msg.value from the previous call         If the calling method (e.g. execTransaction) received ETH this would revert otherwise\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol\":\"MultiSend\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol\":{\"keccak256\":\"0xe6bf0d0a7cd22246fe93dc7da134359d9d61cd2671e20384ec3c9e7677fadc55\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://379d2ac2581c22cc52b41c9062b01e2c660ad45f41cef908bd4b23b9f7f41b0a\",\"dweb:/ipfs/QmVVd5sPrHCzYCWdWWUMZujdKX7fEBX1nkHb9QejoDGMAP\"]}},\"version\":1}",
              "bytecode": "0x60a060405234801561001057600080fd5b5030606081901b6080526102536100316000396000604301526102536000f3fe60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b610036610031366004610156565b610038565b005b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156100ce5760405162461bcd60e51b815260206004820152603060248201527f4d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642060448201526f1d9a584819195b1959d85d1958d85b1b60821b606482015260840160405180910390fd5b805160205b81811015610151578083015160f81c6001820184015160601c601583018501516035840186015160558501870160008560008114610118576001811461012857610133565b6000808585888a5af19150610133565b6000808585895af491505b508061013e57600080fd5b50508060550185019450505050506100d3565b505050565b60006020828403121561016857600080fd5b813567ffffffffffffffff8082111561018057600080fd5b818401915084601f83011261019457600080fd5b8135818111156101a6576101a6610207565b604051601f8201601f19908116603f011681019083821181831017156101ce576101ce610207565b816040528281528760208487010111156101e757600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d908ff87eaa63f3ad4fe27b39044964d01ee57da8ce7b9d525d237c5c55e225264736f6c63430008070033",
              "deployedBytecode": "0x60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b610036610031366004610156565b610038565b005b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156100ce5760405162461bcd60e51b815260206004820152603060248201527f4d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642060448201526f1d9a584819195b1959d85d1958d85b1b60821b606482015260840160405180910390fd5b805160205b81811015610151578083015160f81c6001820184015160601c601583018501516035840186015160558501870160008560008114610118576001811461012857610133565b6000808585888a5af19150610133565b6000808585895af491505b508061013e57600080fd5b50508060550185019450505050506100d3565b505050565b60006020828403121561016857600080fd5b813567ffffffffffffffff8082111561018057600080fd5b818401915084601f83011261019457600080fd5b8135818111156101a6576101a6610207565b604051601f8201601f19908116603f011681019083821181831017156101ce576101ce610207565b816040528281528760208487010111156101e757600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d908ff87eaa63f3ad4fe27b39044964d01ee57da8ce7b9d525d237c5c55e225264736f6c63430008070033",
              "history": [],
              "storageLayout": {
                "storage": [],
                "types": null
              }
            }
          ],
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      ],
      "storageLayout": {
        "storage": [],
        "types": null
      }
    }
  ],
  "storageLayout": {
    "storage": [],
    "types": null
  }
}